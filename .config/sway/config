# Executables needed for this to work:
# termite
# sway{idle,lock}
# rofi
# dmenu
# dex
# brightnessctl
# playerctl
# nm-applet (the one from the AUR package network-manager-applet-indicator)
# inactive-windows-transparency.py (from /contrib/ in the sway repo)
# mako

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim. NOTE: not used yet
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu rofi -show drun -show-icons
# set $menu j4-dmenu-desktop --no-generic

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border normal

exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 400 'swaymsg "output * dpms off"' \
       resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 000000' \
    lock 'swaylock -f -c 000000'

# Hide borders
hide_edge_borders none

input "1452:582:bcm5974" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    scroll_factor 0.5
#    middle_emulation enabled
}

input "1452:582:Apple_Inc._Apple_Internal_Keyboard_/_Trackpad" {
     xkb_layout latam
} 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

bindsym --locked XF86AudioRaiseVolume exec pamixer --increase 5
bindsym --locked XF86AudioLowerVolume exec pamixer --decrease 5
bindsym --locked XF86AudioMute exec pamixer --toggle-mute
# start a $term
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q kill

# start program launcher
bindsym $mod+d exec $menu

# start password selector
bindsym $mod+p exec --no-startup-id gopass ls --flat | dmenu | xargs --no-run-if-empty gopass show -c

# generate new password
bindsym $mod+g exec --no-startup-id "gopass ls --flat | dmenu -p 'changing or (shift) creating password' | xargs --no-run-if-empty gopass generate -f -c -x"

# Screen brightness controls
bindsym XF86MonBrightnessUp exec brightnessctl set '+5%'
bindsym XF86MonBrightnessDown exec brightnessctl set '5%-'

# Keyboard brightness controls
bindsym XF86KbdBrightnessUp exec brightnessctl --device smc::kbd_backlight set '+5%'
bindsym XF86KbdBrightnessDown exec brightnessctl --device smc::kbd_backlight set '5%-'

# Media Player controls
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous

# Screenshots
bindsym Control+Shift+3 exec grim "$(date '+Imágenes/Capturas/Captura del %d de %b %y a las %T.png')"
bindsym Control+Shift+4 exec grim -g "$(slurp -b 00000033)" "$(date '+Imágenes/Capturas/Captura del %d de %b %y a las %T.png')"

# focus_follows_mouse no

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+ntilde split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Open applications on specific workspaces
assign [class="qutebrowser"] $ws1
assign [class="Firefox"] $ws1
assign [class="Emacs"] $ws2
assign [class="Code"] $ws2
assign [class="code-oss"] $ws2
assign [class="VSCodium"] $ws2
assign [class="jetbrains*"] $ws2
assign [class="firefoxdeveloperedition"] $ws3
assign [class="Thunderbird"] $ws6
assign [class="Rambox"] $ws7
assign [class="TelegramDesktop"] $ws7
assign [class="lollypop"] $ws8

# reload the configuration file
bindsym $mod+Shift+c reload

# exit sway
bindsym $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'"

# Set shut down, restart and locking features
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
bindsym $mod+0 mode "$mode_system"
mode "$mode_system" {
    bindsym l exec loginctl lock-session, mode "default"
    bindsym s exec systemctl suspend, mode "default"
    bindsym e exit, mode "default"
    bindsym r exec reboot, mode "default"
    bindsym Shift+s exec poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter, Escape or $mod+r again
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Autostart applications
exec dex --autostart

bar {
  swaybar_command waybar
}

# Set inner/outer gaps
gaps inner 8
gaps outer -2

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# common applications spawner
set $mode_spawn Spawn: (w)eb, (e)ditor, (r)anger, (c)hat, (m)usic
bindsym $mod+s mode "$mode_spawn"

mode "$mode_spawn" {
        bindsym $mod+w  exec firefox; mode "default"
        bindsym $mod+e  exec code --reuse-window; mode "default"
        bindsym $mod+r  exec nemo; mode "default"
        bindsym $mod+c  exec telegram-desktop; mode "default"
        bindsym $mod+m  exec spotify; mode "default"
        bindsym w       exec firefox
        bindsym e       exec code --reuse-window
        bindsym r       exec nemo
        bindsym c       exec telegram-desktop
        bindsym m       exec spotify
        bindsym Return  mode "default"
        bindsym Escape  mode "default"
}

exec inactive-windows-transparency.py
exec mako
exec nm-applet --indicator
exec wallpaper
include /etc/sway/config.d/*
include $HOME/.config/sway/window_hacks
